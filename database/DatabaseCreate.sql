-- MySQL Script generated by MySQL Workbench
-- Mon May 31 12:14:01 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bh_room_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bh_room_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bh_room_db` DEFAULT CHARACTER SET utf8 ;
USE `bh_room_db` ;

-- -----------------------------------------------------
-- Table `bh_room_db`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`room` (
  `roomNo` INT NOT NULL AUTO_INCREMENT,
  `roomName` VARCHAR(45) NULL,
  `areaInSqrMetre` FLOAT NOT NULL,
  `category` VARCHAR(45) NOT NULL,
  `pricePerUnit` DECIMAL NOT NULL,
  `lastUpdate` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`roomNo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`role` (
  `roleName` VARCHAR(45) NOT NULL,
  `isEnabledToManageRooms` TINYINT NULL,
  `isEnabledToManageBookings` TINYINT NULL,
  `isEnabledToManageCustomerData` TINYINT NULL,
  `createdAt` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdate` VARCHAR(45) NULL DEFAULT 'NULL ON UPDATE CURRENT_TIMESTAMP',
  PRIMARY KEY (`roleName`),
  UNIQUE INDEX `roleName_UNIQUE` (`roleName` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`account_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`account_details` (
  `accountId` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(75) NOT NULL,
  `passwordHash` VARCHAR(255) NOT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`accountId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`employee` (
  `empNo` INT NOT NULL AUTO_INCREMENT,
  `empName` VARCHAR(45) NOT NULL,
  `givenRole` VARCHAR(45) NOT NULL,
  `accountId` INT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdate` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`empNo`),
  UNIQUE INDEX `empNo_UNIQUE` (`empNo` ASC),
  INDEX `fk_Employee_Role1_idx` (`givenRole` ASC),
  INDEX `fk_employee_account_details1_idx` (`accountId` ASC),
  UNIQUE INDEX `accountId_UNIQUE` (`accountId` ASC),
  CONSTRAINT `fk_Employee_Role1`
    FOREIGN KEY (`givenRole`)
    REFERENCES `bh_room_db`.`role` (`roleName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee_account_details1`
    FOREIGN KEY (`accountId`)
    REFERENCES `bh_room_db`.`account_details` (`accountId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`contact_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`contact_data` (
  `contactDataId` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `streetName` VARCHAR(45) NOT NULL,
  `streetNumber` VARCHAR(10) NOT NULL,
  `postalCode` VARCHAR(10) NOT NULL,
  `cityName` VARCHAR(60) NOT NULL,
  `phone` VARCHAR(45) NULL,
  `mailAddress` VARCHAR(80) NULL,
  `lastUpdate` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`contactDataId`),
  UNIQUE INDEX `addressId_UNIQUE` (`contactDataId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`customer` (
  `customerID` INT NOT NULL AUTO_INCREMENT,
  `paymentMethod` VARCHAR(15) NULL,
  `contactDataId` INT NOT NULL,
  `accountId` INT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdate` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`customerID`),
  UNIQUE INDEX `custId_UNIQUE` (`customerID` ASC),
  INDEX `fk_Customer_ContactData1_idx` (`contactDataId` ASC),
  INDEX `fk_customer_account_details1_idx` (`accountId` ASC),
  UNIQUE INDEX `accountId_UNIQUE` (`accountId` ASC),
  CONSTRAINT `fk_Customer_ContactData1`
    FOREIGN KEY (`contactDataId`)
    REFERENCES `bh_room_db`.`contact_data` (`contactDataId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_account_details1`
    FOREIGN KEY (`accountId`)
    REFERENCES `bh_room_db`.`account_details` (`accountId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`booking` (
  `bookingNo` INT NOT NULL AUTO_INCREMENT,
  `bookingDate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdate` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `roomNo` INT NOT NULL,
  `startDate` DATE NOT NULL,
  `endDate` DATE NOT NULL,
  `startTime` VARCHAR(10) NULL,
  `endTime` VARCHAR(10) NULL,
  `specialWishes` VARCHAR(100) NULL,
  `Employee_empNo` INT NOT NULL,
  `Customer_customerID` INT NOT NULL,
  PRIMARY KEY (`bookingNo`),
  UNIQUE INDEX `bookingId_UNIQUE` (`bookingNo` ASC),
  INDEX `fk_Booking_Employee1_idx` (`Employee_empNo` ASC),
  INDEX `fk_Booking_Customer1_idx` (`Customer_customerID` ASC),
  CONSTRAINT `fk_Booking_Employee1`
    FOREIGN KEY (`Employee_empNo`)
    REFERENCES `bh_room_db`.`employee` (`empNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Booking_Customer1`
    FOREIGN KEY (`Customer_customerID`)
    REFERENCES `bh_room_db`.`customer` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`booking_request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`booking_request` (
  `reqId` INT NOT NULL AUTO_INCREMENT,
  `bookingRequestDate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `amountPeople` INT NOT NULL,
  `price` DECIMAL NULL,
  `Room_roomNo` INT NOT NULL,
  `Customer_customerID` INT NOT NULL,
  PRIMARY KEY (`reqId`),
  UNIQUE INDEX `reqId_UNIQUE` (`reqId` ASC),
  INDEX `fk_BookingRequest_Room1_idx` (`Room_roomNo` ASC),
  INDEX `fk_BookingRequest_Customer1_idx` (`Customer_customerID` ASC),
  CONSTRAINT `fk_BookingRequest_Room1`
    FOREIGN KEY (`Room_roomNo`)
    REFERENCES `bh_room_db`.`room` (`roomNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BookingRequest_Customer1`
    FOREIGN KEY (`Customer_customerID`)
    REFERENCES `bh_room_db`.`customer` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`room_has_booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`room_has_booking` (
  `Room_roomNo` INT NOT NULL,
  `Booking_bookingId` INT NOT NULL,
  PRIMARY KEY (`Room_roomNo`, `Booking_bookingId`),
  INDEX `fk_Room_has_Booking_Booking1_idx` (`Booking_bookingId` ASC),
  INDEX `fk_Room_has_Booking_Room1_idx` (`Room_roomNo` ASC),
  CONSTRAINT `fk_Room_has_Booking_Room1`
    FOREIGN KEY (`Room_roomNo`)
    REFERENCES `bh_room_db`.`room` (`roomNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Room_has_Booking_Booking1`
    FOREIGN KEY (`Booking_bookingId`)
    REFERENCES `bh_room_db`.`booking` (`bookingNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`hotelroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`hotelroom` (
  `bedCount` INT NOT NULL,
  `hasSpeedLAN` TINYINT NULL,
  `hasTV` TINYINT NULL,
  `hasKitchen` TINYINT NULL,
  `hasCoffeemaker` TINYINT NULL,
  `room_roomNo` INT NOT NULL,
  INDEX `fk_hotelroom_room1_idx` (`room_roomNo` ASC),
  CONSTRAINT `fk_hotelroom_room1`
    FOREIGN KEY (`room_roomNo`)
    REFERENCES `bh_room_db`.`room` (`roomNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bh_room_db`.`conferenceroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bh_room_db`.`conferenceroom` (
  `maxAmountOfParticipants` INT NOT NULL,
  `amountOfWhiteboards` INT NULL,
  `amountOfBeamer` INT NULL,
  `hasScreen` TINYINT NULL,
  `hasComputer` TINYINT NULL,
  `hasTV` TINYINT NULL,
  `room_roomNo` INT NOT NULL,
  INDEX `fk_conferenceroom_room1_idx` (`room_roomNo` ASC),
  CONSTRAINT `fk_conferenceroom_room1`
    FOREIGN KEY (`room_roomNo`)
    REFERENCES `bh_room_db`.`room` (`roomNo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
